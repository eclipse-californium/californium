<configuration>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %level [%logger{0}]: %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="ORIGINFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>logs/origin.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- rollover monthly, or if filesize exceeds -->
			<fileNamePattern>logs/origin-%d{yyyy-MM}.%i.log</fileNamePattern>
			<!-- each file should be at most 10MB, keep 200 files worth of history, but at most 2GB -->
			<maxFileSize>10MB</maxFileSize>
			<maxHistory>200</maxHistory>
			<totalSizeCap>2GB</totalSizeCap>
		</rollingPolicy>

		<encoder>
			<!-- use tab to separate timestamp from message -->
			<pattern>[%date{yyyy-MM-dd HH:mm:ss}]\t%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>logs/messages.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- rollover monthly, or if filesize exceeds -->
			<fileNamePattern>logs/messages-%d{yyyy-MM}.%i.log</fileNamePattern>
			<!-- each file should be at most 10MB, keep 200 files worth of history, but at most 2GB -->
			<maxFileSize>10MB</maxFileSize>
			<maxHistory>200</maxHistory>
			<totalSizeCap>2GB</totalSizeCap>
		</rollingPolicy>

		<encoder>
			<!-- use tab to separate timestamp from message -->
			<pattern>%d{mm:ss.SSS} %level [%logger{0}]: %msg%n</pattern>
		</encoder>
	</appender>

	<!-- ORIGIN only to file
	<logger name="org.eclipse.californium.core.network.interceptors.OriginTracer" level="TRACE" additivity="false">
		<appender-ref ref="ORIGINFILE" />
	</logger>
	
	<logger name="org.eclipse.californium.core.network.interceptors.MessageTracer" level="INFO" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.network.UdpMatcher" level="TRACE" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.network.Exchange" level="TRACE" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.network.InMemoryMessageExchangeStore" level="TRACE" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.network.stack.BlockwiseLayer" level="INFO" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.network.stack.ReliabilityLayer" level="TRACE" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.core.observe.InMemoryObservationStore" level="DEBUG" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</logger>
	<logger name="org.eclipse.californium.extplugtests.resources.ReverseObserve" level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</logger>
 -->

	<logger name="org.eclipse.californium.core.network.InMemoryMessageExchangeStore.health" level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="org.eclipse.californium.core.network.stack.BlockwiseLayer.health" level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="org.eclipse.californium.core.observe.InMemoryObservationStore.health" level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="org.eclipse.californium.extplugtests.resources.ReverseObserve.health" level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<root level="WARN">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>

</configuration>
