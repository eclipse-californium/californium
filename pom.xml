<?xml version='1.0' encoding='UTF-8'?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.eclipse.californium</groupId>
	<artifactId>parent</artifactId>
	<version>2.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Californium (Cf) Parent</name>
	<description>Common definitions and configuration for all Californium (Cf) components</description>
	<url>https://www.eclipse.org/californium/</url>
	<organization>
		<name>Eclipse Foundation</name>
		<url>http://www.eclipse.org/</url>
	</organization>
	<licenses>
		<license>
			<name>Eclipse Public License - Version 2.0</name>
			<url>https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt</url>
		</license>
		<license>
			<name>Eclipse Distribution License - Version 1.0</name>
			<url>https://www.eclipse.org/org/documents/edl-v10.html</url>
		</license>
	</licenses>
	<scm>
		<developerConnection>scm:git:ssh://git@github.com/eclipse/californium.git</developerConnection>
		<url>https://github.com/eclipse/californium</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/eclipse/californium/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://ci.eclipse.org/californium/</url>
	</ciManagement>
	<developers>
		<developer>
			<id>mkovatsch</id>
			<name>Matthias Kovatsch</name>
			<email>kovatsch@inf.ethz.ch</email>
			<url>http://people.inf.ethz.ch/mkovatsc/</url>
			<organization>ETH Zurich</organization>
			<organizationUrl>http://www.vs.inf.ethz.ch/</organizationUrl>
			<roles>
				<role>Committer</role>
				<role>Lead</role>
			</roles>
		</developer>
		<developer>
			<id>mlanter</id>
			<name>Martin Lanter</name>
			<email>martin.lanter@gmx.ch</email>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>jvermillard</id>
			<name>Julien Vermillard</name>
			<email>jvermillar@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>khudalla</id>
			<name>Kai Hudalla</name>
			<email>kai.hudalla@bosch-si.com</email>
			<url>https://github.com/sophokles73</url>
			<organization>Bosch Software Innovations GmbH</organization>
			<organizationUrl>http://www.bosch-si.com</organizationUrl>
			<roles>
				<role>Committer</role>
				<role>Lead</role>
			</roles>
		</developer>
		<developer>
			<id>sbernard</id>
			<name>Simon Bernard</name>
			<email>sbernard@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>boaks</id>
			<name>Achim Kraus</name>
			<email>achim.kraus@bosch-si.com</email>
			<organization>Bosch Software Innovations GmbH</organization>
			<organizationUrl>http://www.bosch-si.com</organizationUrl>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.javaVersion>1.7</project.build.javaVersion>
		<snapshotDependencyAllowed>true</snapshotDependencyAllowed>
		<cbor.version>4.0.0</cbor.version>
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<junit.version>4.12</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<mockito.version>1.10.19</mockito.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Releases</name>
			<url>https://repo.eclipse.org/content/repositories/californium-releases/</url>
		</repository>
		<snapshotRepository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Snapshots</name>
			<url>https://repo.eclipse.org/content/repositories/californium-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Releases</name>
			<url>https://repo.eclipse.org/content/repositories/californium-releases/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>eclipse_snapshots</id>
			<name>Eclipse Snapshots</name>
			<url>https://repo.eclipse.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector-tcp-netty</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>scandium</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>californium-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>californium-proxy</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>californium-proxy2</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>cf-nat</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.upokecenter</groupId>
				<artifactId>cbor</artifactId>
				<version>${cbor.version}</version>
			</dependency>

			<!--  tests & runtime -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>demo-certs</artifactId>
				<version>${project.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>californium-legal</artifactId>
				<version>${project.version}</version>
				<scope>provided</scope>
			</dependency>

			<!--  tests -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
				<classifier>tests</classifier>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>californium-core</artifactId>
				<version>${project.version}</version>
				<classifier>tests</classifier>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>assembly</module>
		<module>legal</module>
		<module>element-connector</module>
		<module>scandium-core</module>
		<module>element-connector-tcp-netty</module>
		<module>californium-core</module>
		<module>californium-integration-tests</module>
		<module>californium-proxy</module>
		<module>californium-proxy2</module>
		<module>californium-osgi</module>
		<module>demo-apps</module>
		<module>demo-certs</module>
		<module>cf-oscore</module>
		<module>cf-pubsub</module>
		<module>cf-unix-health</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${project.build.javaVersion}</source>
						<target>${project.build.javaVersion}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
					<configuration>
						<useSystemClassLoader>false</useSystemClassLoader>
						<systemPropertyVariables>
							<org.eclipse.californium.junit.socketmode>DIRECT</org.eclipse.californium.junit.socketmode>
						</systemPropertyVariables>
						<excludes>
							<exclude>**/*$*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.5.0</version>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doclint>none</doclint>
						<additionalparam>${javadoc.opts}</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.2.0</version>
					<inherited>true</inherited>
					<dependencies>
						<dependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>californium-assembly</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<attach>false</attach>
						<archive>
							<manifest>
								<mainClass>${assembly.mainClass}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.8</version>
				</plugin>
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.cbi.maven.plugins</groupId>
					<artifactId>eclipse-jarsigner-plugin</artifactId>
					<version>1.1.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>1.17</version>
					<configuration>
						<signature>
							<groupId>net.sf.androidscents.signature</groupId>
							<artifactId>android-api-level-16</artifactId>
							<version>4.1.2_r5</version>
						</signature>
						<annotations>
							<annotation>org.eclipse.californium.elements.util.NotForAndroid</annotation>
						</annotations>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>1.16</version>
				</plugin>
				<plugin>
					<groupId>org.revapi</groupId>
					<artifactId>revapi-maven-plugin</artifactId>
					<version>0.11.2</version>
					<dependencies>
						<dependency>
							<groupId>org.revapi</groupId>
							<artifactId>revapi-java</artifactId>
							<version>0.20.0</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.0.5</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<!-- Make sure that only non-snapshot versions are used for the dependencies. 
							Only active when property 'snapshotDependencyAllowed' is false. -->
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>${snapshotDependencyAllowed}</skip>
							<rules>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
								<requireReleaseVersion>
									<message>No Snapshots Allowed!</message>
								</requireReleaseVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- 
					Use the Nexus Staging plugin as a full replacement for the standard
					Maven Deploy plugin.
					See https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
					why this makes sense :-)
					We can control whether we want to deploy to the Eclipse repo or Maven Central
					by a combination of the version being a SNAPHOT or release version and property
					skipStaging=true/false.
					In any case we can take advantage of the plugin's "deferred deploy" feature which
					makes sure that all artifacts of a multi-module project are deployed as a whole
					at the end of the build process instead of deploying each module's artifacts
					individually as part of building the module.
				 -->
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.revapi</groupId>
				<artifactId>revapi-maven-plugin</artifactId>
				<configuration>
					<oldVersion>2.1.0</oldVersion>
					<analysisConfiguration>
						<revapi.semver.ignore>
							<enabled>true</enabled>
							<versionIncreaseAllows>
								<major>breaking</major>
								<minor>nonBreaking</minor>
								<patch>equivalent</patch>
							</versionIncreaseAllows>
						</revapi.semver.ignore>
						<revapi.java.filter.annotated>
							<regex>false</regex>
							<exclude>
								<item>@org.eclipse.californium.elements.util.NoPublicAPI</item>
								<item>@java.lang.Deprecated</item>
							</exclude>
						</revapi.java.filter.annotated>
						<revapi.java>
							<checks>
								<nonPublicPartOfAPI>
									<reportUnchanged>true</reportUnchanged>
								</nonPublicPartOfAPI>
							</checks>
							<filter>
								<!--packages>
									<regex>true</regex>
									<exclude>
										<item>org\.eclipse\.californium\.scandium\.dtls.*</item>
									</exclude>
								</packages-->
								<!--classes>
									<regex>false</regex>
									<exclude>
										<item>org.eclipse.californium.scandium.dtls.Handshaker</item>
									</exclude>
								</classes-->
							</filter>
						</revapi.java>
						<revapi.ignore>
							<item>
								<regex>true</regex>
								<code>java\.class\.externalClassExposedInAPI</code>
								<package>org\.eclipse\.californium\..*</package>
								<justification>
									Californium uses classes of other californium modules very
									frequently in the APIs. It's considered, that always all
									used californium modules must have the same version!
								</justification>
							</item>
						</revapi.ignore>
					</analysisConfiguration>
					<failOnMissingConfigurationFiles>false</failOnMissingConfigurationFiles>
					<analysisConfigurationFiles>
						<configurationFile>
							<path>api-changes.json</path>
							<roots>
								<root>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</root>
							</roots>
						</configurationFile>
					</analysisConfigurationFiles>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!--
				this profile downloads licenses used by 3rd-party library
			-->
			<id>download-licenses</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>downloadLicenses</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-licenses</id>
								<configuration>
									<excludedGroups>org.eclipse.californium</excludedGroups>
									<excludedScopes>system,test</excludedScopes>
								</configuration>
								<goals>
									<goal>download-licenses</goal>
									<goal>aggregate-download-licenses</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!--
				this profile generates javadoc to check integrity
				sub-modules can set property maven.javadoc.skip=true in order to skip this
				(e.g., the executable examples, which do not require Javadoc)
			-->
			<id>javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java11-html4</id>
			<activation>
				<jdk>[1.11,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-X-html4</javadoc.opts>
			</properties>
		</profile>
		<profile>
			<id>revapi</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>[1.8,)</jdk>
				<property>
					<name>!revapi.skip.check</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
					<groupId>org.revapi</groupId>
					<artifactId>revapi-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile signs artifacts so that they can be deployed to repo.eclipse.org -->
			<id>eclipse_jar_signing</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>enableEclipseJarSigner</name>
				</property>
			</activation>
			<pluginRepositories>
				<pluginRepository>
					<id>eclipse-repo</id>
					<name>Eclipse Repository</name>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
					<url>https://repo.eclipse.org/content/repositories/releases/</url>
				</pluginRepository>
			</pluginRepositories>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.cbi.maven.plugins</groupId>
						<artifactId>eclipse-jarsigner-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-jars</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile generates GPG signatures -->
			<id>create_gpg_signature</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createGPGSignature</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
