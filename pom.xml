<?xml version='1.0' encoding='UTF-8'?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.eclipse.californium</groupId>
	<artifactId>parent</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Californium (Cf) Parent</name>
	<description>Common definitions and configuration for all Californium (Cf) components</description>
	<url>https://www.eclipse.org/californium/</url>
	<organization>
		<name>Eclipse Foundation</name>
		<url>http://www.eclipse.org/</url>
	</organization>
	<licenses>
		<license>
			<name>Eclipse Public License - Version 2.0</name>
			<url>https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt</url>
		</license>
		<license>
			<name>Eclipse Distribution License - Version 1.0</name>
			<url>https://www.eclipse.org/org/documents/edl-v10.html</url>
		</license>
	</licenses>
	<scm>
		<developerConnection>scm:git:ssh://git@github.com/eclipse/californium.git</developerConnection>
		<url>https://github.com/eclipse/californium</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/eclipse/californium/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://ci.eclipse.org/californium/</url>
	</ciManagement>
	<developers>
		<developer>
			<id>mkovatsch</id>
			<name>Matthias Kovatsch</name>
			<email>kovatsch@inf.ethz.ch</email>
			<url>http://people.inf.ethz.ch/mkovatsc/</url>
			<organization>ETH Zurich</organization>
			<organizationUrl>http://www.vs.inf.ethz.ch/</organizationUrl>
			<roles>
				<role>Committer</role>
				<role>Lead</role>
			</roles>
		</developer>
		<developer>
			<id>mlanter</id>
			<name>Martin Lanter</name>
			<email>martin.lanter@gmx.ch</email>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>jvermillard</id>
			<name>Julien Vermillard</name>
			<email>jvermillar@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>khudalla</id>
			<name>Kai Hudalla</name>
			<email>kai.hudalla@bosch.io</email>
			<url>https://github.com/sophokles73</url>
			<organization>Bosch.IO GmbH</organization>
			<organizationUrl>http://www.bosch.io</organizationUrl>
			<roles>
				<role>Committer</role>
				<role>Lead</role>
			</roles>
		</developer>
		<developer>
			<id>sbernard</id>
			<name>Simon Bernard</name>
			<email>sbernard@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>boaks</id>
			<name>Achim Kraus</name>
			<email>achim.kraus@bosch.io</email>
			<url>https://github.com/boaks</url>
			<organization>Bosch.IO GmbH</organization>
			<organizationUrl>http://www.bosch.io</organizationUrl>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.javaVersion>1.7</project.build.javaVersion>
		<snapshotDependencyAllowed>true</snapshotDependencyAllowed>
		<javadoc.doclint>none</javadoc.doclint>
	</properties>

	<distributionManagement>
		<repository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Releases</name>
			<url>https://repo.eclipse.org/content/repositories/californium-releases/</url>
		</repository>
		<snapshotRepository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Snapshots</name>
			<url>https://repo.eclipse.org/content/repositories/californium-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>dash-licenses-snapshots</id>
			<url>https://repo.eclipse.org/content/repositories/dash-licenses-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>repo.eclipse.org</id>
			<name>Californium Repository - Releases</name>
			<url>https://repo.eclipse.org/content/repositories/californium-releases/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>eclipse_snapshots</id>
			<name>Eclipse Snapshots</name>
			<url>https://repo.eclipse.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<modules>
		<module>assembly</module>
		<module>bom</module>
		<module>legal</module>
		<module>element-connector</module>
		<module>scandium-core</module>
		<module>element-connector-tcp-netty</module>
		<module>californium-core</module>
		<module>cf-utils/cf-nat</module>
		<module>cf-utils/cf-unix-health</module>
		<module>cf-utils/cf-cluster</module>
		<module>cf-utils/cf-cli</module>
		<module>cf-utils/cf-cli-tcp-netty</module>
		<module>californium-tests</module>
		<module>californium-proxy2</module>
		<module>californium-osgi</module>
		<module>demo-apps</module>
		<module>demo-certs</module>
		<module>cf-oscore</module>
		<module>cf-pubsub</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<goals>
								<goal>toolchain</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<toolchains>
							<jdk>
								<version>${project.build.javaVersion}</version>
							</jdk>
						</toolchains>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${project.build.javaVersion}</source>
						<target>${project.build.javaVersion}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<compilerArgs>
							<arg>-Xlint:deprecation</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
					<configuration>
						<useSystemClassLoader>false</useSystemClassLoader>
						<systemPropertyVariables>
							<org.eclipse.californium.junit.socketmode>DIRECT</org.eclipse.californium.junit.socketmode>
						</systemPropertyVariables>
						<excludes>
							<exclude>**/*$*</exclude>
						</excludes>
						<excludedGroups>org.eclipse.californium.elements.category.Small,org.eclipse.californium.elements.category.Medium,org.eclipse.californium.elements.category.Large,org.eclipse.californium.elements.category.NativeDatagramSocketImplRequired</excludedGroups>
					</configuration>
				<executions>
					<execution>
						<id>small-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<groups>org.eclipse.californium.elements.category.Small</groups>
							<excludedGroups>org.eclipse.californium.elements.category.Medium,org.eclipse.californium.elements.category.Large,org.eclipse.californium.elements.category.NativeDatagramSocketImplRequired</excludedGroups>
						</configuration>
					</execution>
					<execution>
						<id>medium-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<groups>org.eclipse.californium.elements.category.Medium</groups>
							<excludedGroups>org.eclipse.californium.elements.category.Small,org.eclipse.californium.elements.category.Large,org.eclipse.californium.elements.category.NativeDatagramSocketImplRequired</excludedGroups>
						</configuration>
					</execution>
					<execution>
						<id>large-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<groups>org.eclipse.californium.elements.category.Large</groups>
							<excludedGroups>org.eclipse.californium.elements.category.Small,org.eclipse.californium.elements.category.Medium,org.eclipse.californium.elements.category.NativeDatagramSocketImplRequired</excludedGroups>
						</configuration>
					</execution>
					<execution>
						<id>native-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<org.eclipse.californium.junit.socketmode>NATIVE</org.eclipse.californium.junit.socketmode>
							</systemPropertyVariables>
							<groups>org.eclipse.californium.elements.category.NativeDatagramSocketImplRequired</groups>
							<excludedGroups>org.eclipse.californium.elements.category.Small,org.eclipse.californium.elements.category.Medium,org.eclipse.californium.elements.category.Large</excludedGroups>
						</configuration>
					</execution>
				</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.5.1</version>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.3.0</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<source>${project.build.javaVersion}</source>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<inherited>true</inherited>
					<dependencies>
						<dependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>californium-assembly</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<attach>false</attach>
						<archive>
							<manifest>
								<mainClass>${assembly.mainClass}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.8</version>
				</plugin>
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.cbi.maven.plugins</groupId>
					<artifactId>eclipse-jarsigner-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>1.19</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.revapi</groupId>
					<artifactId>revapi-maven-plugin</artifactId>
					<version>0.12.2</version>
					<dependencies>
						<dependency>
							<groupId>org.revapi</groupId>
							<artifactId>revapi-java</artifactId>
							<version>0.22.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.eclipse.dash</groupId>
					<artifactId>license-tool-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
					<executions>
						<execution>
							<id>license-check</id>
							<phase>verify</phase>
							<goals>
								<goal>license-check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence/>
								<requireMavenVersion>
									<version>3.2.5</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<!-- Make sure that only non-snapshot versions are used for the dependencies. 
							Only active when property 'snapshotDependencyAllowed' is false. -->
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>${snapshotDependencyAllowed}</skip>
							<rules>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
								<requireReleaseVersion>
									<message>No Snapshots Allowed!</message>
								</requireReleaseVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- 
					Use the Nexus Staging plugin as a full replacement for the standard
					Maven Deploy plugin.
					See https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
					why this makes sense :-)
					We can control whether we want to deploy to the Eclipse repo or Maven Central
					by a combination of the version being a SNAPHOT or release version and property
					skipStaging=true/false.
					In any case we can take advantage of the plugin's "deferred deploy" feature which
					makes sure that all artifacts of a multi-module project are deployed as a whole
					at the end of the build process instead of deploying each module's artifacts
					individually as part of building the module.
				 -->
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.revapi</groupId>
				<artifactId>revapi-maven-plugin</artifactId>
				<configuration>
					<oldVersion>2.6.0</oldVersion>
					<analysisConfiguration>
						<revapi.semver.ignore>
							<enabled>true</enabled>
							<versionIncreaseAllows>
								<major>breaking</major>
								<minor>nonBreaking</minor>
								<patch>equivalent</patch>
							</versionIncreaseAllows>
						</revapi.semver.ignore>
						<revapi.java.filter.annotated>
							<regex>false</regex>
							<exclude>
								<item>@org.eclipse.californium.elements.util.NoPublicAPI</item>
								<item>@org.eclipse.californium.elements.util.WipAPI</item>
								<item>@java.lang.Deprecated</item>
							</exclude>
						</revapi.java.filter.annotated>
						<revapi.java>
							<checks>
								<nonPublicPartOfAPI>
									<reportUnchanged>true</reportUnchanged>
								</nonPublicPartOfAPI>
							</checks>
							<filter>
								<!--packages>
									<regex>true</regex>
									<exclude>
										<item>org\.eclipse\.californium\.scandium\.dtls.*</item>
									</exclude>
								</packages-->
								<!--classes>
									<regex>false</regex>
									<exclude>
										<item>org.eclipse.californium.scandium.dtls.Handshaker</item>
									</exclude>
								</classes-->
							</filter>
						</revapi.java>
						<revapi.ignore>
							<item>
								<regex>true</regex>
								<code>java\.class\.externalClassExposedInAPI</code>
								<package>org\.eclipse\.californium\..*</package>
								<justification>
									Californium uses classes of other californium modules very
									frequently in the APIs. It's considered, that always all
									used californium modules must have the same version!
								</justification>
							</item>
							<item>
								<regex>true</regex>
								<code>java\.class\.externalClassExposedInAPI</code>
								<package>org\.slf4j</package>
								<justification>
									Californium uses classes of slf4j in some case with scope protected.
								</justification>
							</item>
						</revapi.ignore>
					</analysisConfiguration>
					<failOnMissingConfigurationFiles>false</failOnMissingConfigurationFiles>
					<analysisConfigurationFiles>
						<configurationFile>
							<path>api-changes.json</path>
							<roots>
								<root>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</root>
							</roots>
						</configurationFile>
					</analysisConfigurationFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<configuration>
					<signature>
						<groupId>net.sf.androidscents.signature</groupId>
						<artifactId>android-api-level-19</artifactId>
						<version>4.4.2_r4</version>
					</signature>
					<annotations>
						<annotation>org.eclipse.californium.elements.util.NotForAndroid</annotation>
					</annotations>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!--
				this profile downloads licenses used by 3rd-party library
			-->
			<id>download-licenses</id>
			<activation>
				<property>
					<name>downloadLicenses</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-licenses</id>
								<configuration>
									<excludedGroups>org.eclipse.californium</excludedGroups>
									<excludedScopes>system,test</excludedScopes>
								</configuration>
								<goals>
									<goal>download-licenses</goal>
									<goal>aggregate-download-licenses</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java7-javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- jdk executing maven, not the jdk of the toolchain -->
				<jdk>[,1.8)</jdk>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java8-javadoc</id>
			<activation>
				<!-- jdk executing maven, not the jdk of the toolchain -->
				<jdk>[1.8,11)</jdk>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<show>private</show>
							<doclint>${javadoc.doclint}</doclint>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java11-javadoc</id>
			<activation>
				<!-- jdk executing maven, not the jdk of the toolchain -->
				<jdk>[11,)</jdk>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<doclint>${javadoc.doclint}</doclint>
							<additionalparam>-X-html4</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile activate the usage of toolchain to compile using JDK 1.7-->
			<id>useToolchain</id>
			<activation>
				<property>
					<name>useToolchain</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile activate the usage of toolchain to compile and javadoc using JDK 1.7-->
			<id>toolchain-javadoc</id>
			<activation>
				<property>
					<name>useToolchainJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-toolchains-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>animalsniffer</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>animal.sniffer.skip</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>animal-sniffer-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>revapi</id>
			<activation>
				<jdk>[1.8,)</jdk>
				<property>
					<name>revapi.skip</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
					<groupId>org.revapi</groupId>
					<artifactId>revapi-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile signs artifacts so that they can be deployed to repo.eclipse.org -->
			<id>eclipse_jar_signing</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>enableEclipseJarSigner</name>
				</property>
			</activation>
			<pluginRepositories>
				<pluginRepository>
					<id>eclipse-repo</id>
					<name>Eclipse Repository</name>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
					<url>https://repo.eclipse.org/content/repositories/cbi-releases/</url>
				</pluginRepository>
			</pluginRepositories>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.cbi.maven.plugins</groupId>
						<artifactId>eclipse-jarsigner-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-jars</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile generates GPG signatures -->
			<id>create_gpg_signature</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createGPGSignature</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
